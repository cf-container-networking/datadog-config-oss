{
  "description": "container networking metrics",
  "graphs": [
    {
      "definition": {
        "autoscale": true,
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_* "
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>netmon.NetInterfaceCount{deployment:<%= diego_deployment %>} by {job,index}",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Interface Count"
    },
    {
      "definition": {
        "autoscale": true,
        "events": [
          {
            "q": "tags:deployment:<%= cf_deployment %> test_* "
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>policy_server.StoreAllError{deployment:<%= cf_deployment %>} by {index,job}",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Policy Server Errors"
    },
    {
      "definition": {
        "autoscale": true,
        "events": [
          {
            "q": "tags:deployment:<%= cf_deployment %> test_* "
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>policy_server_internal.InternalPoliciesRequestTime{deployment:<%= cf_deployment %>} by {index,job}",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Internal Policies Index Request Time"
    },
    {
      "definition": {
        "autoscale": true,
        "events": [
          {
            "q": "tags:deployment:<%= cf_deployment %> test_* "
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>policy_server.StoreAllTime{deployment:<%= cf_deployment %>} by {index,job}",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "List All Policies DB Query Time"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "markers": [
          {
            "dim": "y",
            "max": 80,
            "min": null,
            "type": "ok dashed",
            "value": "y < 80"
          },
          {
            "dim": "y",
            "max": null,
            "min": 80,
            "type": "error bold",
            "value": "y > 80"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:bosh.healthmonitor.system.cpu.sys{job:<%= diego_cell_job %>_z1} by {job,index}",
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:bosh.healthmonitor.system.cpu.sys{job:<%= diego_cell_job %>_z2} by {job,index}",
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:bosh.healthmonitor.system.cpu.sys{job:<%= diego_cell_job %>_z3} by {job,index}",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Cell CPU Sys"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= cf_deployment %> test_*"
          }
        ],
        "markers": [
          {
            "dim": "y",
            "max": 80,
            "min": null,
            "type": "ok dashed",
            "value": "y < 80"
          },
          {
            "dim": "y",
            "max": null,
            "min": 80,
            "type": "error bold",
            "value": "y > 80"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:bosh.healthmonitor.system.cpu.sys{job:api} by {job,index}",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "API CPU (co-located Policy Server)"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "markers": [
          {
            "dim": "y",
            "max": 80,
            "min": null,
            "type": "ok dashed",
            "value": "y < 80"
          },
          {
            "dim": "y",
            "max": null,
            "min": 80,
            "type": "error bold",
            "value": "y > 80"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:bosh.healthmonitor.system.cpu.user{job:<%= diego_cell_job %>_z1} by {job,index}",
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:bosh.healthmonitor.system.cpu.user{job:<%= diego_cell_job %>_z2} by {job,index}",
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:bosh.healthmonitor.system.cpu.user{job:<%= diego_cell_job %>_z3} by {job,index}",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Cell CPU User"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "markers": [
          {
            "dim": "y",
            "max": 80,
            "min": null,
            "type": "ok dashed",
            "value": "y < 80"
          },
          {
            "dim": "y",
            "max": null,
            "min": 80,
            "type": "error bold",
            "value": "y > 80"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:bosh.healthmonitor.system.cpu.wait{job:<%= diego_cell_job %>_z1} by {job,index}",
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:bosh.healthmonitor.system.cpu.wait{job:<%= diego_cell_job %>_z2} by {job,index}",
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:bosh.healthmonitor.system.cpu.wait{job:<%= diego_cell_job %>_z3} by {job,index}",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Cell CPU Wait"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>iptables_logger.uptime{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "palette": "dog_classic",
              "width": "thick"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "IPTables Logger Uptime (s)"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>gorouter.latency{deployment:<%= cf_deployment %>}",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Router Latency"
    },
    {
      "definition": {
        "autoscale":true,
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>gorouter.total_routes{deployment:<%= cf_deployment %>}",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Total Routes"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>netmon.IPTablesRuleCount{deployment:<%= diego_deployment %>} by {job,index}",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "IPTables Rules Count"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= cf_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>policy_server.totalPolicies{deployment:<%= cf_deployment %>}",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Total Policies"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>policy_server.uptime{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "palette": "dog_classic",
              "width": "thick"
            },
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>vxlan_policy_agent.uptime{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "palette": "dog_classic",
              "width": "thick"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Uptimes"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_daemon.numberLeases{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "palette": "dog_classic",
              "width": "thick"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Silk Daemon Leases"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_daemon.renewSuccess{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "palette": "dog_classic",
              "width": "thick"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Silk Daemon Renew Success (s)"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_daemon.renewFailure{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "palette": "dog_classic",
              "width": "thick"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Silk Daemon Renew Failure (s)"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_daemon.uptime{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "palette": "dog_classic",
              "width": "thick"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Silk Daemon Uptime (s)"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>rep.ContainerCount{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "palette": "dog_classic",
              "width": "thick"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Container Count"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>rep.GardenContainerCreationDuration{deployment:<%= diego_deployment %>} by {job,index} / 1000 / 1000 / 1000"
          }
        ],
        "viz": "heatmap"
      },
      "title": "Container Creation Duration (sec)"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>vxlan_policy_agent.containerMetadataTime{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "width": "normal"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Agent Container Metadata Time (ms)"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>vxlan_policy_agent.iptablesEnforceTime{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "width": "normal"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Agent Iptables Enforce Time (ms)"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>vxlan_policy_agent.policyServerPollTime{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "width": "normal"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Agent Policy-Server Poll Time (ms)"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>vxlan_policy_agent.totalPollTime{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "width": "normal"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Agent Total Poll Time (ms)"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "per_second(avg:<%= nozzle %>gorouter.responses{deployment:<%= cf_deployment %>})",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Router Responses / Second"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "per_second(avg:<%= nozzle %>netmon.OverlayRxBytes{deployment:<%= diego_deployment %>} by {job,index})",
            "style": {
              "width": "normal"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Overlay Rx Bytes"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "per_second(avg:<%= nozzle %>netmon.OverlayRxDropped{deployment:<%= diego_deployment %>} by {job,index})",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Overlay Rx Drops"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "per_second(avg:<%= nozzle %>netmon.OverlayTxBytes{deployment:<%= diego_deployment %>} by {job,index})",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Overlay Tx Bytes"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "per_second(avg:<%= nozzle %>netmon.OverlayTxDropped{deployment:<%= diego_deployment %>} by {job,index})",
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Overlay Tx Drops"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= cf_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.uptime{deployment:<%= cf_deployment %>} by {job,index}",
            "style": {
              "palette": "dog_classic",
              "width": "thick"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Silk Controller Uptime (s)"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.freeLeases{deployment:<%= diego_deployment %>}",
            "style": {
              "palette": "dog_classic",
              "width": "thick"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Silk Controller Free Leases"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.totalLeases{deployment:<%= diego_deployment %>}",
            "style": {
              "palette": "dog_classic",
              "width": "thick"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Silk Controller Total Leases"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.staleLeases{deployment:<%= diego_deployment %>}",
            "style": {
              "palette": "dog_classic",
              "width": "thick"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Silk Controller Stale Leases"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= cf_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.LeasesIndexRequestTime{deployment:<%= cf_deployment %>}",
            "style": {
              "palette": "dog_classic"
            },
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.LeasesRenewRequestTime{deployment:<%= cf_deployment %>}",
            "style": {
              "palette": "dog_classic"
            },
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.LeasesAcquireRequestTime{deployment:<%= cf_deployment %>}",
            "style": {
              "palette": "dog_classic"
            },
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.LeasesReleaseRequestTime{deployment:<%= cf_deployment %>}",
            "style": {
              "palette": "dog_classic"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Silk Controller Handler Times"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.LeasesIndexRequestCount{deployment:<%= diego_deployment %>}",
            "style": {
              "palette": "dog_classic"
            },
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.LeasesRenewRequestCount{deployment:<%= diego_deployment %>}",
            "style": {
              "palette": "dog_classic"
            },
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.LeasesAcquireRequestCount{deployment:<%= diego_deployment %>}",
            "style": {
              "palette": "dog_classic"
            },
            "type": "line"
          },
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.LeasesReleaseRequestCount{deployment:<%= diego_deployment %>}",
            "style": {
              "palette": "dog_classic"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Silk Controller Handler Counts"
    },
    {
      "definition": {
        "events": [
          {
            "q": "tags:deployment:<%= diego_deployment %> test_*"
          }
        ],
        "requests": [
          {
            "aggregator": "avg",
            "conditional_formats": [

            ],
            "q": "avg:<%= nozzle %>silk_controller.http_error{deployment:<%= diego_deployment %>} by {job,index}",
            "style": {
              "palette": "dog_classic"
            },
            "type": "line"
          }
        ],
        "viz": "timeseries"
      },
      "title": "Silk Controller HTTP Errors"
    }
  ],
  "read_only": false,
  "template_variables": [
    {
      "default": "*",
      "name": "var",
      "prefix": null
    }
  ],
  "title": "<%= title %> Timeboard"
}
